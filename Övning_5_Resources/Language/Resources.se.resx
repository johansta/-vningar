<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Airplane_NumberOfParachutes" xml:space="preserve">
    <value>Antal fallskärmar</value>
  </data>
  <data name="Attribute_Name" xml:space="preserve">
    <value>Atributnamn</value>
  </data>
  <data name="Attribute_Quantity" xml:space="preserve">
    <value>Antal</value>
  </data>
  <data name="Attribute_Value" xml:space="preserve">
    <value>Atributvärde</value>
  </data>
  <data name="Boat_NumberOfEngines" xml:space="preserve">
    <value>Antal motorer</value>
  </data>
  <data name="Bus_NumberOfSeats" xml:space="preserve">
    <value>Antal säten</value>
  </data>
  <data name="Capacity_Failed_Validation" xml:space="preserve">
    <value>Kapaciteten misslyckades valideringen, försök igen!</value>
  </data>
  <data name="Capacity_Range" xml:space="preserve">
    <value>1 till 128</value>
  </data>
  <data name="Car_FuelType" xml:space="preserve">
    <value>Bränsletyp</value>
  </data>
  <data name="FuelType_Range" xml:space="preserve">
    <value>GASOLINE eller DIESEL</value>
  </data>
  <data name="Garage_Empty" xml:space="preserve">
    <value>Garaget är tomt!</value>
  </data>
  <data name="Garage_Full" xml:space="preserve">
    <value>Garaget är fullt!</value>
  </data>
  <data name="Help_Blue" xml:space="preserve">
    <value>Blå</value>
  </data>
  <data name="Help_Blue_Description" xml:space="preserve">
    <value>Värde</value>
  </data>
  <data name="Help_Green" xml:space="preserve">
    <value>Grön</value>
  </data>
  <data name="Help_Green_Description" xml:space="preserve">
    <value>Kommando</value>
  </data>
  <data name="Help_Red" xml:space="preserve">
    <value>Röd</value>
  </data>
  <data name="Help_Red_Description" xml:space="preserve">
    <value>Användarfel</value>
  </data>
  <data name="Help_Yellow" xml:space="preserve">
    <value>Gul</value>
  </data>
  <data name="Help_Yellow_Description" xml:space="preserve">
    <value>Variabel</value>
  </data>
  <data name="Input_Command" xml:space="preserve">
    <value>Mata in kommando:</value>
  </data>
  <data name="Input_License_Plate_To_Drive" xml:space="preserve">
    <value>Mata in registeringsskylt på fordonet som ska köras!</value>
  </data>
  <data name="Input_License_Plate_To_Search_For" xml:space="preserve">
    <value>Mata in registreringsskylten som ska sökas efter!</value>
  </data>
  <data name="Input_Number_Of_Attributes_To_Search_For" xml:space="preserve">
    <value>Mata in antalet attribut som ska sökas efter!</value>
  </data>
  <data name="Input_Value_For" xml:space="preserve">
    <value>Mata in värde för</value>
  </data>
  <data name="Invalid_Command" xml:space="preserve">
    <value>Felaktigt commando, försök igen!</value>
  </data>
  <data name="Invalid_Input" xml:space="preserve">
    <value>Fel inmatning, försök igen!</value>
  </data>
  <data name="Invalid_Option" xml:space="preserve">
    <value>Fel alternativ, försök igen!</value>
  </data>
  <data name="Leaving_Vehicle" xml:space="preserve">
    <value>Ett fordon lämnar garaget!</value>
  </data>
  <data name="LicensePlate_Range" xml:space="preserve">
    <value>3 bokstäver föjt av 3 siffror t.ex. ABC123</value>
  </data>
  <data name="Menu_Attribute_Types" xml:space="preserve">
    <value>Attributtyper</value>
  </data>
  <data name="Menu_Create_Garage" xml:space="preserve">
    <value>Skapa ett garage</value>
  </data>
  <data name="Menu_Drive_Vehicle" xml:space="preserve">
    <value>Kör fordon</value>
  </data>
  <data name="Menu_Exit" xml:space="preserve">
    <value>Avsluta program</value>
  </data>
  <data name="Menu_Group_Vehicles" xml:space="preserve">
    <value>Gruppera fordon</value>
  </data>
  <data name="Menu_Header" xml:space="preserve">
    <value>Välkommen till garage Liljeholmen!</value>
  </data>
  <data name="Menu_Help" xml:space="preserve">
    <value>Hjälp</value>
  </data>
  <data name="Menu_Input_Capacity" xml:space="preserve">
    <value>Mata in kapacitet</value>
  </data>
  <data name="Menu_Input_Integer" xml:space="preserve">
    <value>Mata in ett heltal</value>
  </data>
  <data name="Menu_Input_Parameter" xml:space="preserve">
    <value>Mata in värdet för parameter {0} av typen {1}</value>
  </data>
  <data name="Menu_List_Vehicles" xml:space="preserve">
    <value>Lista fordon</value>
  </data>
  <data name="Menu_Park_Vehicle" xml:space="preserve">
    <value>Parkera ett fordon</value>
  </data>
  <data name="Menu_Return" xml:space="preserve">
    <value>Återgå till huvudmenyn</value>
  </data>
  <data name="Menu_Search_Attribute" xml:space="preserve">
    <value>Sök med attribut</value>
  </data>
  <data name="Menu_Search_License_Plate" xml:space="preserve">
    <value>Sök med registreringsskylt</value>
  </data>
  <data name="Menu_Vehicle_Types" xml:space="preserve">
    <value>Fordonstyper</value>
  </data>
  <data name="Motorcycle_Silencer" xml:space="preserve">
    <value>Ljuddämpare</value>
  </data>
  <data name="NumberOfEngines_Range" xml:space="preserve">
    <value>1 till 64</value>
  </data>
  <data name="NumberOfParachutes_Range" xml:space="preserve">
    <value>0 till 512</value>
  </data>
  <data name="NumberOfSeats_Range" xml:space="preserve">
    <value>1 till 512</value>
  </data>
  <data name="Parking_Failed" xml:space="preserve">
    <value>Parkering misslyckades. Ett fordon med samma registreringsskylt finns redan i garaget.</value>
  </data>
  <data name="Parking_Vehicle" xml:space="preserve">
    <value>Parkerar fordon!</value>
  </data>
  <data name="Search_Attribute_Not_Found" xml:space="preserve">
    <value>Inga fordon som matchar attributen kunde hittas!</value>
  </data>
  <data name="Search_Failed" xml:space="preserve">
    <value>Kunde inte hitta något fordon med registreringsskylt</value>
  </data>
  <data name="Search_License_Plate_Not_Found" xml:space="preserve">
    <value>Inget fordon i garaget med registreringsskylt</value>
  </data>
  <data name="Silencer_Range" xml:space="preserve">
    <value>FALSE eller TRUE</value>
  </data>
  <data name="Vehicle_Count" xml:space="preserve">
    <value>Antal fordon</value>
  </data>
  <data name="Vehicle_License_Plate" xml:space="preserve">
    <value>Registreringsskylt</value>
  </data>
  <data name="Vehicle_Type" xml:space="preserve">
    <value>Fordons typ</value>
  </data>
</root>